org: bluefinpaymentsystems
app: start
service: justproject

provider:
  name: aws
  runtime: nodejs20.x
  environment:
    DYNAMODB_CUSTOMER_TABLE: ${self:service}-customerTable-${sls:stage}
  httpApi:
    authorizers:
      customAuthorizer:
        type: request
        functionName: authorizerFunc
    cors:
      allowedOrigins:
        - http://localhost:64789

      allowedHeaders:
        - Content-Type
        - Authorization
      allowedMethods:
        - OPTIONS
        - GET
        - POST
        - PATCH
        - DELETE

iam:
  role:
    statements:
      - Effect: 'Allow'
        Action:
          - 'dynamodb:PutItem'
          - 'dynamodb:Get*'
          - 'dynamodb:Scan*'
          - 'dynamodb:UpdateItem'
          - 'dynamodb:DeleteItem'
        Resource: arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:service}-customerTable-${sls:stage}

functions:

  postToWebhook:
    handler: handler.postToWebhook
    events:
      - httpApi:
          method: post
          path: /post-webhook

  simple:
    handler: handler.simple
    events:
      - httpApi:
          method: PATCH
          path: /elo

  extended:
    handler: handler.extended
    events:
      - httpApi:
          method: POST
          path: /post/just/to/this/path

  catchAllAny:
    handler: index.catchAllAny
    events:
      - httpApi:
          method: '*'
          path: '*'

  catchAllMethod:
    handler: handler.catchAllMethod
    events:
      - httpApi:
          method: '*'
          path: /any/method

  params:
    handler: handler.params
    events:
      - httpApi:
          method: GET
          path: /get/for/any/{param}

  hello:
    handler: handler.hello
    events:
      - httpApi:
          method: get
          path: /hello
          authorizer:
            name: customAuthorizer

  authorizerFunc:
    handler: authorizer.handler

  sample:
    handler: handler.sample
    events:
      - httpApi:
          method: get
          path: /sample

  createCustomer:
    handler: createCustomer.createCustomer
    events:
      - httpApi:
          method: post
          path: /


  getCustomers:
    handler: getCustomers.getCustomers
    events:
      - httpApi:
          method: get
          path: /customers

  addNumbers:
    handler: handler.addNumbers
    events:
      - httpApi:
          method: post
          path: /add



resources:
  Resources:
    CustomerTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: primary_key
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: primary_key
            KeyType: HASH
        TableName: ${self:service}-customerTable-${sls:stage}
